static def releaseTime() {
    return new Date().format("yyyy-MM-dd_HHmmss", TimeZone.getTimeZone("GMT+8"))
}

android {
    defaultConfig {
        applicationId "com.linwei.camsmodular"
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    signingConfigs {
        debug {
            keyAlias "${SIGNING_KEYALIAS}"
            keyPassword "${SIGNGING_CERTIFICATEPASSWORD}"
            storeFile file("${SIGNING_CERTIFICATE}")
            storePassword "${SIGNGING_STOREPASSWORD}"
        }
        release {
            keyAlias "${SIGNING_KEYALIAS}"
            keyPassword "${SIGNGING_CERTIFICATEPASSWORD}"
            storeFile file("${SIGNING_CERTIFICATE}")
            storePassword "${SIGNGING_STOREPASSWORD}"
        }
    }

    buildTypes {
        debug {
            //是否优化zip
            zipAlignEnabled true
            //移除无用的resource文件
            shrinkResources false
            //启动代码混淆
            minifyEnabled false
            //指定签名文件位置
            signingConfig signingConfigs.debug
            buildConfigField "boolean", "LOG_DEBUG", "true"
        }
        preview  {
            //是否优化zip
            zipAlignEnabled true
            //移除无用的resource文件
            shrinkResources false
            //启动代码混淆
            minifyEnabled false
            //指定签名文件位置
            signingConfig signingConfigs.debug
            buildConfigField "boolean", "LOG_DEBUG", "true"
        }
        release {
            debuggable false
            //是否优化zip
            zipAlignEnabled true
            //移除无用的resource文件
            shrinkResources false
            //启动代码混淆
            minifyEnabled false
            //指定签名文件位置
            signingConfig signingConfigs.release
            //混淆规则配置文件
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "boolean", "LOG_DEBUG", "false"
        }
        applicationVariants.all { variant ->
            variant.outputs.each { output ->
                def outputFile = output.outputFile
                if (outputFile != null && outputFile.name.endsWith('.apk')) {
                    def fileName = outputFile.name.replace(".apk",
                            "-${defaultConfig.versionName}_${releaseTime()}.apk")
                    output.outputFileName = fileName
                }
            }
        }
    }

//    File propFile = file('/data/apk/properties/signing_as.properties')

//     本地签名文件配置
//    if (propFile.exists()) {
//        Properties props = new Properties()
//        props.load(new FileInputStream(propFile))
//        if (props.containsKey('SIGNING_CERTIFICATE') && props.containsKey('SIGNGING_STOREPASSWORD') &&
//                props.containsKey('SIGNGING_CERTIFICATEPASSWORD') &&
//                props.containsKey('SIGNING_KEYALIAS')) {
//            android.signingConfigs.release.storeFile = file(props['SIGNING_CERTIFICATE'])
//            android.signingConfigs.release.storePassword = props['SIGNGING_STOREPASSWORD']
//            android.signingConfigs.release.keyAlias = props['SIGNING_KEYALIAS']
//            android.signingConfigs.release.keyPassword = props['SIGNGING_CERTIFICATEPASSWORD']
//
//            android.signingConfigs.debug.storeFile = file(props['SIGNING_CERTIFICATE'])
//            android.signingConfigs.debug.storePassword = props['SIGNGING_STOREPASSWORD']
//            android.signingConfigs.debug.keyAlias = props['SIGNING_KEYALIAS']
//            android.signingConfigs.debug.keyPassword = props['SIGNGING_CERTIFICATEPASSWORD']
//        } else {
//            android.buildTypes.release.signingConfig = null
//            android.buildTypes.debug.signingConfig = null
//        }
//    } else {
//        android.buildTypes.release.signingConfig = null
//        android.buildTypes.debug.signingConfig = null
//    }
}